{"mappings":"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","sources":["src/index.ts","src/components/Formix.tsx","src/core/hooks.ts","src/constants.ts","src/core/helpers.tsx","src/core/utils.ts","src/components/Field.tsx","src/core/validates/fastest.validate.ts","src/core/validates/joi.validator.ts"],"sourcesContent":["export { Formix } from \"./components/Formix\";\nexport { Field } from \"./components/Field\";\n\nexport { useFormix } from \"./core/hooks\";\nexport { formSchema, field, validateFactory, fieldFactory, validationChain } from \"./core/helpers\";\n\nexport { fastestValidate } from \"./core/validates/fastest.validate\";\nexport { joiValidate } from \"./core/validates/joi.validator\";\n","import React, { forwardRef, useCallback } from \"react\";\n\nimport { useFormix, UseFormixReturnType } from \"../core/hooks\";\nimport { FormSchemaBase, FormSchema, ConvertFieldToFormPrimitiveValue } from \"../core/types\";\n\nexport const Formix = forwardRef(\n\t<T extends FormSchemaBase>({ schema, children, onSubmit, ...rest }: Props<T>, ref: any) => {\n\t\tconst { Form, ...formix } = useFormix(schema);\n\n\t\tconst handleSubmit = useCallback(\n\t\t\tasync (event: React.FormEvent<HTMLFormElement>) => {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tconst isValid = await formix.validate();\n\n\t\t\t\tif (isValid) {\n\t\t\t\t\tif (onSubmit) {\n\t\t\t\t\t\tonSubmit(formix.getValues());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst target = event.target as HTMLFormElement;\n\t\t\t\t\t\ttarget.submit();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t[formix, onSubmit]\n\t\t);\n\n\t\treturn (\n\t\t\t<Form ref={ref} onSubmit={handleSubmit} {...rest}>\n\t\t\t\t{children(formix as any)}\n\t\t\t</Form>\n\t\t);\n\t}\n) as <T extends FormSchemaBase>(\n\tprops: Props<T> & { ref?: React.ForwardedRef<HTMLFormElement> }\n) => JSX.Element;\n\nexport interface Props<T extends FormSchemaBase>\n\textends Omit<React.ComponentProps<\"form\">, \"onSubmit\"> {\n\tschema: T | FormSchema<T>;\n\tchildren: (formix: Omit<UseFormixReturnType<T>, \"Form\" | \"bindForm\">) => React.ReactNode;\n\tonSubmit?: (values: {\n\t\t[K in keyof FormSchema<T>[\"FORM_SCHEMA\"][\"fields\"]]: ConvertFieldToFormPrimitiveValue<\n\t\t\tFormSchema<T>[\"FORM_SCHEMA\"][\"fields\"][K]\n\t\t>;\n\t}) => void;\n}\n","import React, { useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { useLocalObservable } from \"mobx-react-lite\";\nimport isDeepEqual from \"react-fast-compare\";\n\nimport { FORM_SCHEMA_SYMBOL, FIELD_SCHEMA_SYMBOL } from \"../constants\";\n\nimport {\n\tstoreSchema,\n\tformSchema,\n\tformFactory,\n\tisFieldValuePrimitive,\n\tsyncFieldsValues,\n\tcollectFieldsValues,\n} from \"./helpers\";\nimport { pickProperties } from \"./utils\";\n\nimport type {\n\tArrayShift,\n\tValidateFn,\n\tFormSchema,\n\tFormSchemaBase,\n\tFormValuePrimitive,\n\tFormElementPrimitive,\n\tConvertFieldToFormPrimitiveValue,\n} from \"./types\";\n\nexport function useLocalStore<T extends Record<string, any>>(base: T) {\n\treturn useLocalObservable(() => storeSchema(base));\n}\n\nexport function useFormix<\n\tT extends FormSchemaBase,\n\tU extends FormSchema<T>[\"FORM_SCHEMA\"],\n\tF extends U[\"fields\"],\n\tG extends U[\"groups\"],\n\tNF extends keyof F,\n\tNG extends keyof G\n>(schema: T | FormSchema<T>) {\n\tconst schemaRef = useRef(schema);\n\tconst formRef = useRef<HTMLFormElement>(null);\n\tconst Form = useMemo(() => formFactory(formRef), []);\n\n\tif (!isDeepEqual(schemaRef.current, schema) || schema !== schemaRef.current) {\n\t\tschemaRef.current = schema;\n\t}\n\n\tconst preparedSchema = useMemo(\n\t\t() => formSchema(schemaRef.current),\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[schemaRef.current]\n\t);\n\n\tconst schemaContent = useMemo(() => preparedSchema[FORM_SCHEMA_SYMBOL], [preparedSchema]);\n\tconst schemaFields = useMemo(() => schemaContent.fields, [schemaContent]);\n\tconst schemaGroups = useMemo(() => schemaContent.groups, [schemaContent]);\n\n\tconst fieldsNames = useMemo(() => Object.keys(schemaFields) as NF[], [schemaFields]);\n\n\tconst pickFieldSchema = useCallback(\n\t\t(name: NF) => {\n\t\t\treturn schemaFields[name][FIELD_SCHEMA_SYMBOL];\n\t\t},\n\t\t[schemaFields]\n\t);\n\n\tconst pickGroupSchema = useCallback(\n\t\t(name: NG) => {\n\t\t\treturn (schemaGroups as any)[name];\n\t\t},\n\t\t[schemaGroups]\n\t);\n\n\tconst reduceFieldsNames = useCallback(\n\t\t<T extends any>(callback: (acc: Record<NF, T>, name: NF) => Record<NF, T>) => {\n\t\t\treturn fieldsNames.reduce((acc, key) => callback(acc, key), {} as Record<NF, T>);\n\t\t},\n\t\t[fieldsNames]\n\t);\n\n\tconst defaultErrors = useMemo(\n\t\t() => reduceFieldsNames<string>((acc, name) => ({ ...acc, [name]: \"\" })),\n\t\t[reduceFieldsNames]\n\t);\n\tconst defaultValues = useMemo(\n\t\t() =>\n\t\t\treduceFieldsNames<any>((acc, name) => ({\n\t\t\t\t...acc,\n\t\t\t\t[name]: pickFieldSchema(name).defaultValue ?? \"\",\n\t\t\t})),\n\t\t[pickFieldSchema, reduceFieldsNames]\n\t);\n\tconst fieldsValidates = useMemo(\n\t\t() =>\n\t\t\treduceFieldsNames<ValidateFn | null>((acc, name) => ({\n\t\t\t\t...acc,\n\t\t\t\t[name]: pickFieldSchema(name).validate || null,\n\t\t\t})),\n\t\t[pickFieldSchema, reduceFieldsNames]\n\t);\n\n\tconst errorsStore = useLocalStore(defaultErrors);\n\tconst valuesStore = useLocalStore(defaultValues);\n\n\tconst syncFormFields = useCallback((name: NF, value: FormValuePrimitive) => {\n\t\tconst formElement = formRef.current;\n\n\t\tif (formElement) {\n\t\t\tsyncFieldsValues(name, value, formElement);\n\t\t}\n\t}, []);\n\n\tconst setValues = useCallback(\n\t\t(values: Partial<{ [K in NF]: ConvertFieldToFormPrimitiveValue<F[K]> }>) => {\n\t\t\tfieldsNames.forEach((name) => {\n\t\t\t\tconst value = values[name];\n\n\t\t\t\tif (isFieldValuePrimitive(value)) {\n\t\t\t\t\tvaluesStore[name].set(value);\n\t\t\t\t\tsyncFormFields(name, value);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[fieldsNames, syncFormFields, valuesStore]\n\t);\n\n\tconst setValue = useCallback(\n\t\t<N extends NF, V extends ConvertFieldToFormPrimitiveValue<F[N]>>(\n\t\t\tname: N,\n\t\t\tvalue: ((prevValue: V) => V) | V\n\t\t) => {\n\t\t\tconst newValue = typeof value === \"function\" ? value(valuesStore[name].value) : value;\n\t\t\tsetValues({ [name]: newValue } as any);\n\t\t},\n\t\t[setValues, valuesStore]\n\t);\n\n\tconst getValue = useCallback(\n\t\t<N extends NF>(name: N) => {\n\t\t\treturn valuesStore[name].value as ConvertFieldToFormPrimitiveValue<F[N]>;\n\t\t},\n\t\t[valuesStore]\n\t);\n\n\tconst getValues = useCallback(() => {\n\t\treturn reduceFieldsNames<any>((acc, name) => ({\n\t\t\t...acc,\n\t\t\t[name]: getValue(name),\n\t\t})) as { [K in NF]: ConvertFieldToFormPrimitiveValue<F[K]> };\n\t}, [getValue, reduceFieldsNames]);\n\n\tconst setErrors = useCallback(\n\t\t(errors: Partial<Record<NF, string>>) => {\n\t\t\tfieldsNames.forEach((name) => {\n\t\t\t\tconst error = errors[name];\n\n\t\t\t\tif (typeof error === \"string\") {\n\t\t\t\t\terrorsStore[name].set(error);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[errorsStore, fieldsNames]\n\t);\n\n\tconst setError = useCallback(\n\t\t(name: NF, error: string) => {\n\t\t\terrorsStore[name].set(error);\n\t\t},\n\t\t[errorsStore]\n\t);\n\n\tconst getErrors = useCallback(() => {\n\t\treturn reduceFieldsNames<string>((acc, name) => ({ ...acc, [name]: errorsStore[name].value }));\n\t}, [errorsStore, reduceFieldsNames]);\n\n\tconst getError = useCallback(\n\t\t(name: NF) => {\n\t\t\treturn errorsStore[name].value;\n\t\t},\n\t\t[errorsStore]\n\t);\n\n\tconst createRefHandler = useCallback(\n\t\t(name: NF) => () => {\n\t\t\tsyncFormFields(name, valuesStore[name].value);\n\t\t},\n\t\t[syncFormFields, valuesStore]\n\t);\n\n\tconst createChangeHandler = useCallback(\n\t\t(name: NF) => (event: React.ChangeEvent<FormElementPrimitive>) => {\n\t\t\tconst field = event.target;\n\t\t\tconst value = collectFieldsValues(field, valuesStore[name].value);\n\n\t\t\tsetValue(name, value as any);\n\t\t\tsetError(name, \"\");\n\t\t},\n\t\t[setError, setValue, valuesStore]\n\t);\n\n\tconst bind = useCallback(\n\t\t(name: NF) => {\n\t\t\treturn {\n\t\t\t\tname,\n\t\t\t\tref: createRefHandler(name),\n\t\t\t\tonChange: createChangeHandler(name),\n\t\t\t};\n\t\t},\n\t\t[createChangeHandler, createRefHandler]\n\t);\n\n\tconst bindForm = useCallback(() => {\n\t\treturn {\n\t\t\tref: formRef,\n\t\t};\n\t}, []);\n\n\tconst getValidationErrors = useCallback(\n\t\tasync (target?: NG) => {\n\t\t\tconst fields = target\n\t\t\t\t? pickGroupSchema(target)\n\t\t\t\t\t? pickGroupSchema(target)\n\t\t\t\t\t: [target]\n\t\t\t\t: fieldsNames;\n\n\t\t\tconst validates = pickProperties(fieldsValidates, ...fields);\n\t\t\tconst filteredValidates = Object.fromEntries(\n\t\t\t\tObject.entries(validates).filter(([, validate]) => validate)\n\t\t\t);\n\t\t\tconst validatesKeys = Object.keys(filteredValidates) as NF[];\n\t\t\tconst isValidatesNotEmpty = validatesKeys.length > 0;\n\n\t\t\tif (isValidatesNotEmpty) {\n\t\t\t\tconst validatesPromises = validatesKeys.map((name) =>\n\t\t\t\t\t(filteredValidates[name] as ValidateFn)(valuesStore[name].value, name)\n\t\t\t\t);\n\t\t\t\tconst validatesResults = (await Promise.allSettled(validatesPromises)) as {\n\t\t\t\t\treason?: string;\n\t\t\t\t\tvalue?: string;\n\t\t\t\t}[];\n\t\t\t\tconst haveSomeErrors = validatesResults.some((result) => result.value);\n\n\t\t\t\tif (haveSomeErrors) {\n\t\t\t\t\treturn validatesResults.reduce((acc, result, index) => {\n\t\t\t\t\t\tconst name = validatesKeys[index];\n\t\t\t\t\t\treturn { ...acc, [name]: result.value ? String(result.value) : undefined };\n\t\t\t\t\t}, {} as Partial<Record<NF, string>>);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {};\n\t\t},\n\t\t[fieldsNames, fieldsValidates, pickGroupSchema, valuesStore]\n\t);\n\n\tconst validate = useCallback(\n\t\tasync (target?: NG) => {\n\t\t\tconst errors = await getValidationErrors(target);\n\t\t\tconst errorsKeys = Object.keys(errors) as NF[];\n\t\t\tconst haveSomeErrors = errorsKeys.length > 0;\n\n\t\t\tif (haveSomeErrors) {\n\t\t\t\tsetErrors(errors);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[getValidationErrors, setErrors]\n\t);\n\n\tconst isValid = useCallback(\n\t\tasync (target?: NG) => {\n\t\t\tconst errors = await getValidationErrors(target);\n\t\t\tconst errorsKeys = Object.keys(errors) as NF[];\n\t\t\tconst haveSomeErrors = errorsKeys.length > 0;\n\n\t\t\treturn !haveSomeErrors;\n\t\t},\n\t\t[getValidationErrors]\n\t);\n\n\tconst $ = useCallback(\n\t\t<N extends NF>(name: N) => {\n\t\t\treturn {\n\t\t\t\tbind: () => bind(name),\n\t\t\t\tisValid: () => isValid(name as any),\n\t\t\t\tvalidate: () => validate(name as any),\n\t\t\t\tgetError: () => getError(name),\n\t\t\t\tgetValue: () => getValue(name),\n\t\t\t\tsetError: (error: string) => setError(name, error),\n\t\t\t\tsetValue: <V extends ConvertFieldToFormPrimitiveValue<F[N]>>(\n\t\t\t\t\tvalue: ((prevValue: V) => V) | V\n\t\t\t\t) => setValue(name, value),\n\t\t\t};\n\t\t},\n\t\t[bind, getError, getValue, isValid, setError, setValue, validate]\n\t);\n\n\tuseEffect(() => {\n\t\tsetValues(defaultValues);\n\t\tsetErrors(defaultErrors);\n\t}, [defaultErrors, defaultValues, setErrors, setValues]);\n\n\treturn {\n\t\t$,\n\t\tbind,\n\t\tForm,\n\t\tisValid,\n\t\tgetError,\n\t\tgetErrors,\n\t\tsetError,\n\t\tsetErrors,\n\t\tgetValue,\n\t\tgetValues,\n\t\tsetValue,\n\t\tsetValues,\n\t\tvalidate,\n\t\tbindForm,\n\t};\n}\n\nexport type UseFormixReturnType<\n\tT extends FormSchemaBase,\n\tU extends FormSchema<T>[\"FORM_SCHEMA\"] = FormSchema<T>[\"FORM_SCHEMA\"],\n\tF extends U[\"fields\"] = U[\"fields\"],\n\tG extends U[\"groups\"] = U[\"groups\"],\n\tNF extends keyof F = keyof F,\n\tNG extends keyof G = keyof G\n> = {\n\tbind: (name: NF) => {\n\t\tname: NF;\n\t\tref: React.RefObject<any>;\n\t\tonChange: React.ChangeEventHandler<any>;\n\t};\n\tForm: (\n\t\tprops: React.ComponentProps<\"form\"> & { ref: React.RefObject<HTMLFormElement> }\n\t) => JSX.Element;\n\tisValid: (target?: NG) => Promise<boolean>;\n\tvalidate: (target?: NG) => Promise<boolean>;\n\tgetError: (name: NF) => string;\n\tgetErrors: () => Record<NF, string>;\n\tsetError: (name: NF, error: string) => void;\n\tsetErrors: (errors: Partial<Record<NF, string>>) => void;\n\tgetValue: <N extends NF>(name: N) => ConvertFieldToFormPrimitiveValue<F[N]>;\n\tgetValues: () => { [K in NF]: ConvertFieldToFormPrimitiveValue<F[K]> };\n\tsetValue: <N extends NF, V extends ConvertFieldToFormPrimitiveValue<F[N]>>(\n\t\tname: N,\n\t\tvalue: ((prevValue: V) => V) | V\n\t) => void;\n\tsetValues: (values: Partial<{ [K in NF]: ConvertFieldToFormPrimitiveValue<F[K]> }>) => void;\n\tbindForm: () => { ref: React.RefObject<HTMLFormElement> };\n\t$: <N extends NF>(\n\t\tname: N\n\t) => {\n\t\t[K in keyof Omit<\n\t\t\tUseFormixReturnType<T, U, F, G, N, NG>,\n\t\t\t\"$\" | \"getValues\" | \"getErrors\" | \"setErrors\" | \"setValues\" | \"Form\" | \"bindForm\"\n\t\t>]: (\n\t\t\t...params: ArrayShift<Parameters<UseFormixReturnType<T, U, F, G, N, NG>[K]>>\n\t\t) => ReturnType<UseFormixReturnType<T, U, F, G, N, NG>[K]>;\n\t};\n};\n","export const FIELD_SCHEMA_SYMBOL = Symbol(\"fieldSchema\") as unknown as \"FIELD_SCHEMA\";\nexport const FORM_SCHEMA_SYMBOL = Symbol(\"formSchema\") as unknown as \"FORM_SCHEMA\";\n\nexport const CHECKED_INPUT_TYPES = [\"radio\", \"checkbox\"];\n","import React, { forwardRef } from \"react\";\n\nimport { FORM_SCHEMA_SYMBOL, FIELD_SCHEMA_SYMBOL, CHECKED_INPUT_TYPES } from \"../constants\";\n\nimport {\n\tmergeRefs,\n\tisInputElement,\n\tisSelectElement,\n\tisTextAreaElement,\n\tdeepObjectEntries,\n\tremoveDuplicateElements,\n} from \"./utils\";\nimport type {\n\tAliasBase,\n\tValidateFn,\n\tFormSchema,\n\tStoreSchema,\n\tFieldSchema,\n\tFormSchemaBase,\n\tStoreSchemaBase,\n\tFieldSchemaBase,\n\tFormValuePrimitive,\n\tFormElementPrimitive,\n} from \"./types\";\n\nexport function formSchema<T extends FormSchemaBase>(schema: FormSchema<T> | T): FormSchema<T> {\n\tif ((schema as any)[FORM_SCHEMA_SYMBOL]) {\n\t\treturn schema as any;\n\t}\n\n\tconst entries = deepObjectEntries(\n\t\tschema,\n\t\t(_, value) => !isFieldSchema(value) && !isFieldValuePrimitive(value)\n\t);\n\n\tconst fields = entries\n\t\t.filter(([, value]) => isFieldValuePrimitive(value) || isFieldSchema(value))\n\t\t.map(([key, value]) => [\n\t\t\tkey,\n\t\t\tisFieldValuePrimitive(value) ? field({ defaultValue: value }) : value,\n\t\t]);\n\n\tconst groups = entries\n\t\t.filter(([entryKey]) => fields.every(([key]) => key !== entryKey))\n\t\t.map(([entryKey]) => [\n\t\t\t`${entryKey}.*`,\n\t\t\tfields.filter(([key]) => key.includes(entryKey)).map(([key]) => key),\n\t\t]);\n\n\treturn {\n\t\t[FORM_SCHEMA_SYMBOL]: { fields: Object.fromEntries(fields), groups: Object.fromEntries(groups) },\n\t};\n}\n\nexport function field<T extends FormValuePrimitive>(\n\tschema: FieldSchema<T> | FieldSchemaBase<T>\n): FieldSchema<T> {\n\tif ((schema as any)[FIELD_SCHEMA_SYMBOL]) {\n\t\treturn schema as any;\n\t}\n\n\treturn {\n\t\t[FIELD_SCHEMA_SYMBOL]: schema as any,\n\t};\n}\n\nexport function storeSchema<S extends StoreSchemaBase>(object: S) {\n\treturn Object.entries(object).reduce(\n\t\t(acc, [key, defaultValue]) => ({\n\t\t\t...acc,\n\t\t\t[key]: {\n\t\t\t\tvalue: defaultValue,\n\t\t\t\tset: function (value) {\n\t\t\t\t\tthis.value = value;\n\t\t\t\t},\n\t\t\t},\n\t\t}),\n\t\t{} as StoreSchema<S>\n\t);\n}\n\nexport function validateFactory<T extends any[]>(validateFn: (...args: T) => ValidateFn) {\n\treturn validateFn;\n}\n\nexport function validationChain(...args: ValidateFn[]): ValidateFn {\n\treturn async (value, fieldName) => {\n\t\tlet error: string = \"\";\n\n\t\tfor (const validate of args) {\n\t\t\terror = await Promise.resolve(validate(value, fieldName));\n\n\t\t\tif (error) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn error;\n\t};\n}\n\ntype FieldProps<T extends AliasBase, K extends keyof T> = { as: K } & (T[K] extends React.FC<\n\tinfer R\n>\n\t? R\n\t: {});\n\nexport function fieldFactory<T extends AliasBase>(\n\talias: T\n): <K extends keyof T>(props: FieldProps<T, K> & { ref?: React.ForwardedRef<any> }) => JSX.Element;\nexport function fieldFactory<T extends AliasBase, D extends keyof T>(\n\talias: T,\n\tdef: D\n): <K extends keyof T = D>(\n\tprops: Omit<FieldProps<T, K>, \"as\"> &\n\t\tPartial<Pick<FieldProps<T, K>, \"as\">> & { ref?: React.ForwardedRef<any> }\n) => JSX.Element;\n\nexport function fieldFactory(alias: any, def?: any) {\n\treturn forwardRef(({ as, ...rest }: any, ref: any) => {\n\t\t// @ts-ignore\n\t\tconst Component = alias[def || as];\n\t\treturn <>{Component ? <Component ref={ref} {...(rest as any)} /> : null}</>;\n\t}) as any;\n}\n\nexport function formFactory(ref: React.RefObject<HTMLFormElement>) {\n\treturn forwardRef<HTMLFormElement, React.ComponentProps<\"form\">>((props, additionalRef) => {\n\t\treturn <form {...props} ref={mergeRefs(ref, additionalRef)} />;\n\t});\n}\n\nexport function syncFieldsValues(name: string, value: FormValuePrimitive, form: HTMLFormElement) {\n\tconst fields = form.querySelectorAll(`[name=\"${name}\"]`);\n\n\tif (Array.isArray(value)) {\n\t\tfields.forEach((field) => {\n\t\t\tif (isSelectElement(field)) {\n\t\t\t\tfield\n\t\t\t\t\t.querySelectorAll(\"option\")\n\t\t\t\t\t.forEach((option) => (option.selected = value.includes(option.value)));\n\t\t\t} else if (isInputElement(field) || isTextAreaElement(field)) {\n\t\t\t\tif (isInputElement(field) && CHECKED_INPUT_TYPES.includes(field.type)) {\n\t\t\t\t\tfield.checked = value.includes(field.value);\n\t\t\t\t} else {\n\t\t\t\t\tfield.value = value[0] || \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} else if (typeof value === \"boolean\") {\n\t\tfields.forEach((field) => {\n\t\t\tif (isInputElement(field)) {\n\t\t\t\tfield.checked = value;\n\t\t\t}\n\t\t});\n\t} else {\n\t\tfields.forEach((field) => {\n\t\t\tif (isSelectElement(field)) {\n\t\t\t\tfield\n\t\t\t\t\t.querySelectorAll(\"option\")\n\t\t\t\t\t.forEach((option) => (option.selected = value === option.value));\n\t\t\t} else if (isInputElement(field) && CHECKED_INPUT_TYPES.includes(field.type)) {\n\t\t\t\tfield.checked = field.value === value;\n\t\t\t} else if (isInputElement(field) || isTextAreaElement(field)) {\n\t\t\t\tfield.value = value;\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function collectFieldsValues(field: FormElementPrimitive, value: FormValuePrimitive) {\n\tif (Array.isArray(value)) {\n\t\tif (isSelectElement(field)) {\n\t\t\tconst selectedOptionsValues = Array.from(field.selectedOptions).map((option) => option.value);\n\t\t\treturn field.multiple\n\t\t\t\t? removeDuplicateElements([...value, ...selectedOptionsValues])\n\t\t\t\t: removeDuplicateElements(selectedOptionsValues);\n\t\t} else if (isInputElement(field) && CHECKED_INPUT_TYPES.includes(field.type)) {\n\t\t\treturn removeDuplicateElements(\n\t\t\t\tfield.checked ? [...value, field.value] : value.filter((value) => value !== field.value)\n\t\t\t);\n\t\t} else if (isInputElement(field) || isTextAreaElement(field)) {\n\t\t\treturn [field.value];\n\t\t}\n\t} else if (typeof value === \"boolean\" && isInputElement(field)) {\n\t\treturn field.checked;\n\t}\n\n\treturn field.value;\n}\n\nexport function isFieldSchema(object: any): object is FieldSchema<any> {\n\treturn Boolean(object[FIELD_SCHEMA_SYMBOL]);\n}\n\nexport function isFieldValuePrimitive(object: any): object is FormValuePrimitive {\n\treturn Array.isArray(object) || [\"string\", \"boolean\"].includes(typeof object);\n}\n","export function deepObjectEntries<T extends Record<string, any>>(\n\tobject: T,\n\tconditionFn?: (key: string, value: any) => boolean\n) {\n\tconst keys = Object.keys(object);\n\tconst entries: [key: string, value: any][] = [];\n\n\tfor (const key of keys) {\n\t\tconst value = object[key];\n\n\t\tentries.push([key, value]);\n\n\t\tif (typeof value === \"object\" && (!conditionFn || conditionFn(key, value))) {\n\t\t\tconst subEntires = deepObjectEntries(value, conditionFn);\n\n\t\t\tentries.push(...subEntires.map(([entryKey, value]) => [`${key}.${entryKey}`, value] as any));\n\t\t}\n\t}\n\n\treturn entries;\n}\n\nexport function excludeProperties<T, K extends keyof T>(object: T, ...keys: K[]) {\n\tconst entries = Object.entries(object) as [K, any][];\n\tconst filteredEntries = entries.filter(([key]) => !keys.includes(key));\n\n\treturn Object.fromEntries(filteredEntries) as Omit<T, K>;\n}\n\nexport function pickProperties<T, K extends keyof T>(object: T, ...keys: K[]) {\n\tconst entries = Object.entries(object) as [K, any][];\n\tconst filteredEntries = entries.filter(([key]) => keys.includes(key));\n\n\treturn Object.fromEntries(filteredEntries) as Pick<T, K>;\n}\n\nexport function mergeRefs<E = Element>(...refs: (React.ForwardedRef<any> | null | undefined)[]) {\n\tconst filteredRefs = refs.filter(Boolean);\n\n\tif (filteredRefs.length === 0) {\n\t\treturn null;\n\t}\n\n\treturn (instance: E | null) => {\n\t\tfor (const ref of filteredRefs) {\n\t\t\tif (typeof ref === \"function\") {\n\t\t\t\tref(instance);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = instance;\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function removeDuplicateElements<T>(array: T[]) {\n\treturn Array.from(new Set(array));\n}\n\nexport function isSelectElement(element: Element): element is HTMLSelectElement {\n\treturn element.tagName.toLowerCase() === \"select\";\n}\n\nexport function isTextAreaElement(element: Element): element is HTMLTextAreaElement {\n\treturn element.tagName.toLocaleLowerCase() === \"textarea\";\n}\n\nexport function isInputElement(element: Element): element is HTMLInputElement {\n\treturn element.tagName.toLocaleLowerCase() === \"input\";\n}\n","import React, { forwardRef } from \"react\";\n\nimport { fieldFactory } from \"../core/helpers\";\n\nconst Input = forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>((props, ref) => {\n\treturn <input ref={ref} {...props} />;\n});\n\nconst Select = forwardRef<HTMLSelectElement, React.ComponentProps<\"select\">>((props, ref) => {\n\treturn <select ref={ref} {...props} />;\n});\n\nconst TextArea = forwardRef<HTMLTextAreaElement, React.ComponentProps<\"textarea\">>((props, ref) => {\n\treturn <textarea ref={ref} {...props} />;\n});\n\nexport const Field = fieldFactory(\n\t{\n\t\tinput: Input,\n\t\tselect: Select,\n\t\ttextArea: TextArea,\n\t},\n\t\"input\"\n);\n","import FastestValidator, { ValidationError, ValidationRuleObject } from \"fastest-validator\";\n\nimport { validateFactory } from \"../helpers\";\n\nconst fastestValidator = new FastestValidator();\n\nexport const fastestValidate = validateFactory(\n\t(rule: string | ValidationRuleObject, validator?: FastestValidator) => {\n\t\tconst plugFieldName = \"$__formix.field__$\";\n\t\tconst check = (validator || fastestValidator).compile({ $$async: true, [plugFieldName]: rule });\n\n\t\treturn async (value, fieldName) => {\n\t\t\tconst result = await check({ [plugFieldName]: value });\n\n\t\t\tif (result === true || !result.length) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\treturn (result as ValidationError[])[0].message?.replaceAll(plugFieldName, fieldName) as string;\n\t\t};\n\t}\n);\n","import { AnySchema } from \"joi\";\n\nimport { validateFactory } from \"../helpers\";\n\nexport const joiValidate = validateFactory((schema: AnySchema) => {\n\treturn async (value) => {\n\t\ttry {\n\t\t\tif (schema?.validateAsync) {\n\t\t\t\tawait schema.validateAsync(value);\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t} catch (error) {\n\t\t\t// @ts-ignore\n\t\t\treturn error?.message || \"\";\n\t\t}\n\t};\n});\n"],"names":[],"version":3,"file":"index.js.map"}